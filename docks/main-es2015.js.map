{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/services/server-mock.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/services/web-authn.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div>\\n  <h1>\\n    Web Authentication\\n  </h1>\\n</div>\\n<div class=\\\"forms\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\n  <fieldset fxFlex=\\\"grow\\\">\\n    <legend>Sign Up</legend>\\n    <div class=\\\"signup\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\">\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\">\\n      </mat-form-field>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"signup()\\\">SIGN UP</button>\\n    </div>\\n  </fieldset>\\n  <fieldset fxFlex=\\\"grow\\\">\\n    <legend>Sign In</legend>\\n    <div class=\\\"signin\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"email\\\">\\n      </mat-form-field>\\n      <mat-form-field>\\n        <input type=\\\"password\\\" matInput placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\">\\n      </mat-form-field>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"signin()\\\">SIGN IN</button>\\n      <div class=\\\"or\\\">OR</div>\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"webAuthSignin()\\\"><mat-icon>fingerprint</mat-icon></button>\\n    </div>\\n  </fieldset>\\n</div>\\n\\n<h1>Admin</h1>\\n<div class=\\\"user\\\" *ngFor=\\\"let user of users\\\">\\n    <button mat-button (click)=\\\"removeUser(user.email)\\\"><mat-icon inline>delete</mat-icon></button> {{ user.email }}\\n</div>\\n\\n<div class=\\\"info\\\">\\n  <hr/>\\n  <h3>Sources</h3>\\n  <div>\\n    <a href=\\\"https://webauthn.io/\\\">Webauthn.io</a>\\n  </div>\\n  <div>\\n    <a href=\\\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\\\">Medium Article by Ackermann Yuriy</a>\\n  </div>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".signup, .signin {\\n  height: 300px;\\n}\\n\\n.info {\\n  margin: 50px 0;\\n}\\n\\n.or {\\n  margin: 8px 0;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYXJjZWxsa2lzcy9kZXYvYW5ndWxhci13ZWItYXV0aG4vc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7QUNDRjs7QURFQTtFQUNFLGNBQUE7QUNDRjs7QURFQTtFQUNFLGFBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWdudXAsIC5zaWduaW4ge1xuICBoZWlnaHQ6IDMwMHB4O1xufVxuXG4uaW5mbyB7XG4gIG1hcmdpbjogNTBweCAwO1xufVxuXG4ub3Ige1xuICBtYXJnaW46IDhweCAwO1xufSIsIi5zaWdudXAsIC5zaWduaW4ge1xuICBoZWlnaHQ6IDMwMHB4O1xufVxuXG4uaW5mbyB7XG4gIG1hcmdpbjogNTBweCAwO1xufVxuXG4ub3Ige1xuICBtYXJnaW46IDhweCAwO1xufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { User } from './interfaces/user';\nimport { ServerMockService } from './services/server-mock.service';\nimport { WebAuthnService } from './services/web-authn.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'angular-web-authn';\n  users: User[];\n  email = 'a@a.com';\n  password = 'aaa';\n  // signupForm: FormGroup;\n\n  constructor(private serverMockService: ServerMockService, private webAuthnService: WebAuthnService) {\n    this.users = serverMockService.getUsers();\n\n    // this.signupForm = fb.group({\n    //   email: ['a@a.com', [Validators.required, Validators.email]],\n    //   password: ['aaa', [Validators.required]],\n    //   confirmPassword: ['aaa', [Validators.required]],\n    // });\n  }\n\n  removeUser(email: string) {\n    this.serverMockService.removeUser(email);\n    this.users = this.serverMockService.getUsers();\n  }\n\n  signup() {\n    console.log('SIGNUP');\n\n    // Save into the 'DB'\n    const user: User = this.serverMockService.addUser({ email: this.email, password: this.password, credentials: [] });\n    this.users = this.serverMockService.getUsers();\n\n    // Ask for WebAuthn Auth method\n    if (confirm('Would you like to use your fingerprint for later logins?')) {\n      this.createCredential(user);\n    }\n  }\n\n  createCredential(user: User) {\n    console.log('[createCredential]');\n    // Creating credentials\n    this.webAuthnService.createCredential(user).then((response) => {\n      console.log('credentials.create RESPONSE', response);\n      // TODO: validate and store credentials\n\n    }).catch((error) => {\n      console.log('credentials.create ERROR', error);\n    });\n  }\n\n  signin() {\n    console.log('[signin]');\n    const user = this.serverMockService.getUsers().find(u => u.email === this.email && u.password === this.password );\n    if (user) {\n      alert('✅ Congrats! Authentication went fine!');\n    } else {\n      alert('🚫 Sorry :( Invalid credentials!');\n    }\n  }\n\n  webAuthSignin() {\n    const user = this.serverMockService.getUser(this.email);\n    this.webAuthnService.getAssertion(user).then((response) => {\n      // TODO: validate attestion\n      alert('✅ Congrats! Authentication went fine!');\n      console.log('SUCCESSFULLY GOT AN ASSERTION!', response);\n    })\n    .catch((error) => {\n      alert('🚫 Sorry :( Invalid credentials!');\n      console.log('FAIL', error);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatIconModule, MatInputModule } from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    MatButtonModule,\n    MatInputModule,\n    FormsModule,\n    MatIconModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerMockService {\n\n  constructor(private userService: UserService) { }\n\n  getUsers() {\n    return this.userService.getUsers();\n  }\n\n  updateUser(user: User) {\n    this.removeUser(user.email);\n    this.addUser(user);\n  }\n\n  addUser(user: User) {\n    user.id = '' + Math.floor(Math.random() * 10000000);\n    this.userService.addUser(user);\n    return user;\n  }\n\n  getUser(email: string) {\n    return this.userService.getUser(email);\n  }\n\n  removeUser(email: string) {\n    return this.userService.removeUser(email);\n  }\n\n  getChallenge() {\n    return Uint8Array.from('someChallengeIsHereComOn', c => c.charCodeAt(0));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor() { }\n\n  getUser(email: string): User {\n    return this.getUsers().find(u => u.email === email);\n  }\n\n  getUsers(): User[] {\n    const usersString  = localStorage.getItem('users');\n    return usersString ? JSON.parse(usersString) : [];\n  }\n\n  saveUsers(users: User[]) {\n    return localStorage.setItem('users', JSON.stringify(users));\n  }\n\n  addUser(user: User) {\n    const users = [...this.getUsers(), user];\n    this.saveUsers(users);\n  }\n\n  removeUser(email: string) {\n    const filteredUsers = this.getUsers().filter(user => user.email !== email);\n    this.saveUsers(filteredUsers);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user';\nimport { ServerMockService } from './server-mock.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebAuthnService {\n\n  constructor(private serverMockService: ServerMockService) { }\n\n  createCredential(user: User): Promise<CredentialType> {\n    const publicKeyCredentialCreationOptions: PublicKeyCredentialCreationOptions = {\n      // Challenge shoulda come from the server\n      challenge: this.serverMockService.getChallenge(),\n      rp: {\n        name: 'WebAuthn Test',\n        // id: 'localhost:4200',\n      },\n      user: {\n        // Some user id coming from the server\n        id: Uint8Array.from(user.id, c => c.charCodeAt(0)),\n        name: user.email,\n        displayName: user.email,\n      },\n      pubKeyCredParams: [{ alg: -7, type: 'public-key' }],\n      authenticatorSelection: {\n        authenticatorAttachment: 'platform',\n      },\n      timeout: 60000,\n      attestation: 'direct'\n    };\n\n    return navigator.credentials.create({\n      publicKey: publicKeyCredentialCreationOptions,\n    });\n  }\n\n  getAssertion(user: User): Promise<CredentialType> {\n    const credentialRequestOptions: PublicKeyCredentialRequestOptions = {\n      challenge: this.serverMockService.getChallenge(),\n      allowCredentials: user.credentials.map(c => {\n        return { type: 'public-key', id: c.credentialId };\n      }),\n    };\n\n    return navigator.credentials.get({\n      publicKey: credentialRequestOptions,\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}